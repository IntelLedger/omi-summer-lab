// Copyright 2017 Intel Corporation
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// -----------------------------------------------------------------------------

syntax = "proto3";

// IndividualIdentity represents a specific person who might participate
// in Works or Recordings.
message IndividualIdentity {
    // Unique name for the individual -- to keep things simple, we
    // are going to use name strings as the unique keys.
    string name = 1;

    // Interested Parties Information, can be null (org or individual,
    // individual in this case) https://en.wikipedia.org/wiki/Interested_Parties_Information
    string IPI = 2;

    // International Standard Name Identifier, can be null (individuals only)
    // https://en.wikipedia.org/wiki/International_Standard_Name_Identifier
    string ISNI = 3;

    // Street address for payments -- can be null
    string street_address = 4;

    // The public key associated with the individual. The create/modify
    // transactions must be signed by the same key (must match
    // Transaction.header.signer_pubkey)
    bytes pubkey = 5;
}

// OrganizationalIdentity represents a specific organization who might
// participate in the publishing of Works or Recordings.
message OrganizationalIdentity {
    enum Type {
        // Labels are responsible for publishing Recordings
        LABEL = 0;

        //Publishers are responsible for publishing Works
        PUBLISHER = 1;
    }

    // Unique name for the organization -- to keep things simple,
    // we are going to use name string as the unique keys.
    string name = 1;

    // Interested Parties Information, can be null (org or individual,
    // org in this case) https://en.wikipedia.org/wiki/Interested_Parties_Information
    string IPI = 2;

    // Street address for payments -- can be null
    string street_address = 3;

    // The public key associated with the organization. The create/modify
    // transactions must be signed by the same key (must match
    // Transaction.header.signer_pubkey)
    bytes pubkey = 4;
}
